using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Common.Extensions
{
    public static class EventHandlerExtensions
    {
        #region EventHandler

        /// <summary>
        /// Raises an event using best practices.
        /// </summary>       
        /// <param name="eventHandler">The event.</param>
        /// <param name="sender">The source of the event.</param>
        /// <param name="args">An <see cref="EventArgs"/> that contains the event data.</param>
        public static void Raise(this EventHandler eventHandler, object sender, EventArgs args)
        {
            EventHandler handler = eventHandler;

            if (handler != null)
            {
                handler(sender, args);
            }
        }

        /// <summary>
        /// Raises an event using best practices.
        /// </summary>
        /// <typeparam name="T">The type of the event data generated by the event.</typeparam>
        /// <param name="eventHandler">The event.</param>
        /// <param name="sender">The source of the event.</param>
        /// <param name="args">An <see cref="EventArgs"/> that contains the event data.</param>
        public static void Raise<T>(this EventHandler<T> eventHandler, object sender, T args) where T : EventArgs
        {
            EventHandler<T> handler = eventHandler;

            if (handler != null)
            {
                handler(sender, args);
            }
        }

        #endregion

    }
}
