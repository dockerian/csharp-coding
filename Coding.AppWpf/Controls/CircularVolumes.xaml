<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Common_Converters="clr-namespace:Common.Wpf.Converters;assembly=Common.Wpf"
    xmlns:Common_Controls="clr-namespace:Common.Wpf.Controls;assembly=Common.Wpf"
    xmlns:Resources="clr-namespace:Coding.AppWpf.Resources"
    x:Class="Coding.AppWpf.Controls.CircularVolumes"
    x:Name="CircularVolumesControl" 
    mc:Ignorable="d"
    d:DesignHeight="200" d:DesignWidth="200"
    Height="Auto"
    Width="Auto"
    >
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="CircularControlListItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <!--
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            -->
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5" >
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="RenderTransform" TargetName="contentPresenter">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="IsEnabled" TargetName="contentPresenter" Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircularSliderSmallVolumeControlStyle" TargetType="{x:Type Common_Controls:CircularSlider}">
            <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
            <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}"/>
            <Setter Property="MaximumAngle" Value="405"/>
            <Setter Property="MinimumAngle" Value="135"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Common_Controls:CircularSlider}">
                        <Grid x:Name="ControlTemplateGrid" 
                              Background="{TemplateBinding Background}"
                              Height="{Binding ActualWidth, ElementName=ControlTemplateGrid}" 
                              Width="Auto"
                              >
                            <Image x:Name="CircularKnob" Source="/Resources/Images/CircularKnob.png" Opacity="1"/>
                            <Grid x:Name="CircularLevelGrid" Grid.Column="1" 
                                  Height="Auto" Width="Auto" 
                                  RenderTransformOrigin="0.5,0.5"
                                  >
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform 
                                            Angle="{Binding Angle, RelativeSource={RelativeSource FindAncestor, 
                                            AncestorType={x:Type Common_Controls:CircularSlider}}}"
                                            />
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="CircularLevel" Height="2" Fill="#D6000000" Width="7" HorizontalAlignment="Right" Margin="0,0,7,0"/>
                            </Grid>
                            <TextBlock x:Name="CircularValueText" 
                                       Grid.ColumnSpan="2" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, 
                                       AncestorType={x:Type Common_Controls:CircularSlider}}}" 
                                       TextWrapping="Wrap" 
                                       />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ShowValue" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CircularValueText"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircularVolumesSliderStyle" TargetType="{x:Type Common_Controls:CircularSlider}">
            <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}"/>
            <Setter Property="MaximumAngle" Value="405"/>
            <Setter Property="MinimumAngle" Value="135"/>
            <Setter Property="ShowValue" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Common_Controls:CircularSlider}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ShowDashes">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CircularMask">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CircularMask">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CircularValueText">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HideDashes">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CircularMask">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CircularMask">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CircularValueText">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="ControlGrid" Background="{TemplateBinding Background}"
                                Height="{Binding ActualWidth, ElementName=ControlGrid}" Width="Auto"
                                >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ValidationStates"/>
                            </VisualStateManager.VisualStateGroups>
                            <Image x:Name="CircularMask" Source="/Resources/Images/CircularDashMarks.png"/>
                            <!--
                            <ContentPresenter x:Name="CircularSliderContentPresenter" RenderTransformOrigin="0.5,0.5" >
                                <ContentPresenter.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.88" ScaleY="0.88"/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            -->
                            <Image x:Name="CircularKnob" Source="/Resources/Images/CircularKnob.png" Margin="10"/>
                            <Grid x:Name="CircularLevelGrid" Grid.Column="1" Height="Auto" RenderTransformOrigin="0.5,0.5" Width="Auto" Margin="10" >
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                            <RotateTransform Angle="{Binding Angle, 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type Common_Controls:CircularSlider}}, 
                                                Mode=TwoWay}"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="CircularLevel" Height="2" Fill="#D6000000" Width="7" HorizontalAlignment="Right" Margin="0,0,9,0"/>
                            </Grid>
                            <TextBlock x:Name="CircularValueText" Grid.ColumnSpan="2" 
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Text="{Binding Value, 
                                    RelativeSource={RelativeSource FindAncestor, 
                                    AncestorType={x:Type Common_Controls:CircularSlider}}, 
                                    Mode=TwoWay}" 
                                TextWrapping="Wrap" 
                                Visibility="{Binding IsChecked, ElementName=ShowValueToggle, 
                                Converter={StaticResource BooleanToVisibilityConverter}}"
                                />
                            <ToggleButton x:Name="ShowValueToggle" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                    IsChecked="{Binding ShowValue, 
                                        RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type Common_Controls:CircularSlider}}, 
                                        Mode=TwoWay}"
                                    Margin="20" Padding="0" Opacity="0" 
                                    >
                                <Ellipse x:Name="ShowValueEllipse" Fill="Black" 
                                    Height="{Binding ActualHeight, ElementName=ShowValueToggle}" 
                                    Width="{Binding ActualWidth, ElementName=ShowValueToggle}" 
                                    Opacity="1"
                                    />
                            </ToggleButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ShowValue" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="HideDashes_BeginStoryboard" Storyboard="{StaticResource HideDashes}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="ShowDashes_BeginStoryboard" Storyboard="{StaticResource ShowDashes}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CircularVolumesControlDataTemplate">
        </DataTemplate>
        
    </UserControl.Resources>

    <Grid x:Name="UserControlGrid"
          Height="160" Width="180"
          >
        <i:Interaction.Triggers>
            <i:EventTrigger>
                <ei:GoToStateAction StateName="InitialState" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Selected" SourceName="RgListBoxItem">
                <ei:ChangePropertyAction TargetObject="{Binding ElementName=SelectedText}" PropertyName="Text" Value="{x:Static Resources:Resource.RingVolumeTitle}" TargetName="SelectedText" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Selected" SourceName="RxListBoxItem">
                <ei:ChangePropertyAction TargetObject="{Binding ElementName=SelectedText}" PropertyName="Text" Value="{x:Static Resources:Resource.RxVolumeTitle}" TargetName="SelectedText" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Selected" SourceName="TxListBoxItem">
                <ei:ChangePropertyAction TargetObject="{Binding ElementName=SelectedText}" PropertyName="Text" Value="{x:Static Resources:Resource.TxVolumeTitle}" TargetName="SelectedText" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="InitialState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.7" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.7" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="SelectedText">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="75"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="48"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="58"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-48"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="58"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="HideControls">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.7" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.7" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="SelectedText">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="75"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="58"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-48"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="58"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowControls">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" 
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" 
                            Storyboard.TargetName="SelectedCircularGrid">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="SelectedText">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RgListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="75"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="48"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="RxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="58"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-48"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames 
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" 
                            Storyboard.TargetName="TxListBoxItem">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="58"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior
                Binding="{Binding ShowValue, ElementName=SelectedSlider}" Value="True"
                FalseState="HideControls" 
                TrueState="ShowControls"
                />
        </i:Interaction.Behaviors>
        <ListBox x:Name="ControlList"
            Background="Transparent"
            ItemsPanel="{DynamicResource GridItemPanelTemplate}"
            ItemContainerStyle="{DynamicResource CircularControlListItemStyle}" 
            SelectedIndex="0"
            >
            <ListBoxItem x:Name="RxListBoxItem"
                Background="{x:Null}" 
                DataContext="{Binding Value, ElementName=RxSlider, Mode=TwoWay}"
                HorizontalAlignment="Left" VerticalAlignment="Top" Margin="9,17,0,0"
                RenderTransformOrigin="0.5,0.5" 
                >
                <ListBoxItem.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </ListBoxItem.RenderTransform>
                <Grid x:Name="RxGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Common_Controls:CircularSlider x:Name="RxSlider"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Style="{DynamicResource CircularSliderSmallVolumeControlStyle}" 
                        ShowValue="False"
                        Width="55"
                        />
                    <TextBlock x:Name="RxSliderTitle"
                        FontFamily="{DynamicResource DefaultFont}"
                        FontSize="{DynamicResource DefaultFontSize}"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        IsHitTestVisible="False" 
                        TextWrapping="Wrap"
                        Text="{x:Static Resources:Resource.RxVolumeTitle}"
                        />
                </Grid>
            </ListBoxItem>
            <ListBoxItem x:Name="RgListBoxItem"
                Background="{x:Null}" 
                DataContext="{Binding Value, ElementName=RgSlider, Mode=TwoWay}"
                HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0" 
                RenderTransformOrigin="0.5,0.5" 
                >
                <ListBoxItem.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </ListBoxItem.RenderTransform>
                <Grid x:Name="RgGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Common_Controls:CircularSlider
                        x:Name="RgSlider"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Style="{DynamicResource CircularSliderSmallVolumeControlStyle}" 
                        ShowValue="False"
                        Width="55"
                        />
                    <TextBlock x:Name="RgSliderTitle"
                        FontFamily="{DynamicResource DefaultFont}"
                        FontSize="{DynamicResource DefaultFontSize}"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Height="19.2" IsHitTestVisible="False" 
                        TextWrapping="Wrap"
                        Text="{x:Static Resources:Resource.RingVolumeTitle}"
                        />
                </Grid>
            </ListBoxItem>
            <ListBoxItem x:Name="TxListBoxItem" d:LayoutOverrides="Height"
                Background="{x:Null}" 
                DataContext="{Binding Value, ElementName=TxSlider, Mode=TwoWay}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,17,9,0"
                RenderTransformOrigin="0.5,0.5" 
                >
                <ListBoxItem.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </ListBoxItem.RenderTransform>
                <Grid x:Name="TxGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Common_Controls:CircularSlider x:Name="TxSlider"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Style="{DynamicResource CircularSliderSmallVolumeControlStyle}" 
                        ShowValue="False"
                        Width="55"
                        />
                    <TextBlock x:Name="TxSliderTitle"
                        FontFamily="{DynamicResource DefaultFont}"
                        FontSize="{DynamicResource DefaultFontSize}"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        IsHitTestVisible="False" 
                        TextWrapping="Wrap"
                        Text="{x:Static Resources:Resource.TxVolumeTitle}"
                        />
                </Grid>
            </ListBoxItem>
        </ListBox>
        <Grid x:Name="SelectedCircularGrid"
            Height="95" Width="95" 
            HorizontalAlignment="Center" VerticalAlignment="Bottom"
            RenderTransformOrigin="0.5,0.5"
            >
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Common_Controls:CircularSlider
                x:Name="SelectedSlider"
                Style="{DynamicResource CircularVolumesSliderStyle}"
                MaximumValue="{Binding RxMaximumValue, ElementName=CircularVolumesControl}"
                MinimumValue="{Binding RxMinimumValue, ElementName=CircularVolumesControl}"
                Value="{Binding SelectedItem.DataContext, Converter={x:Static Common_Converters:NullToDoubleConverter.Instance}, ElementName=ControlList, Mode=TwoWay}"
                RenderTransformOrigin="0.5,0.5"
                ShowValue="False">
                <Common_Controls:CircularSlider.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Common_Controls:CircularSlider.RenderTransform>
            </Common_Controls:CircularSlider>
            <TextBlock
                x:Name="SelectedText"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                Foreground="{DynamicResource DefaultTextColor}"
                IsHitTestVisible="False"
                RenderTransformOrigin="0.5,0.5"
                Text="{x:Static Resources:Resource.RxVolumeTitle}"
                TextWrapping="Wrap"
                >
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="2" ScaleY="2" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </TextBlock.RenderTransform>
            </TextBlock>

        </Grid><!--SelectedCircularGrid-->

    </Grid><!--UserControlGrid-->

    <UserControl.Triggers>
        <!--//NOTE: UserControl.Triggers can only have EventTrigger
        <DataTrigger Binding="{Binding IsSelected, ElementName=RxListBoxItem}" Value="True">
            <Setter Property="Background" TargetName="SelectedText" Value="{x:Static Resources:Resource.RxVolumeTitle}" />
        </DataTrigger>
        -->
    </UserControl.Triggers>
</UserControl>
